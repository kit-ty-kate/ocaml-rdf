
let foaf_str = "http://xmlns.com/foaf/0.1/";;
let foaf = Iri.of_string foaf_str ;;
let foaf_ s = Iri.of_string (foaf_str ^ s);;

let c_Agent = foaf_ "Agent" ;;
let c_Document = foaf_ "Document" ;;
let c_Group = foaf_ "Group" ;;
let c_Image = foaf_ "Image" ;;
let c_LabelProperty = foaf_ "LabelProperty" ;;
let c_OnlineAccount = foaf_ "OnlineAccount" ;;
let c_OnlineChatAccount = foaf_ "OnlineChatAccount" ;;
let c_OnlineEcommerceAccount = foaf_ "OnlineEcommerceAccount" ;;
let c_OnlineGamingAccount = foaf_ "OnlineGamingAccount" ;;
let c_Organization = foaf_ "Organization" ;;
let c_Person = foaf_ "Person" ;;
let c_PersonalProfileDocument = foaf_ "PersonalProfileDocument" ;;
let c_Project = foaf_ "Project" ;;
let account = foaf_ "account" ;;
let accountName = foaf_ "accountName" ;;
let accountServiceHomepage = foaf_ "accountServiceHomepage" ;;
let age = foaf_ "age" ;;
let aimChatID = foaf_ "aimChatID" ;;
let based_near = foaf_ "based_near" ;;
let birthday = foaf_ "birthday" ;;
let currentProject = foaf_ "currentProject" ;;
let depiction = foaf_ "depiction" ;;
let depicts = foaf_ "depicts" ;;
let dnaChecksum = foaf_ "dnaChecksum" ;;
let familyName = foaf_ "familyName" ;;
let family_name = foaf_ "family_name" ;;
let firstName = foaf_ "firstName" ;;
let focus = foaf_ "focus" ;;
let fundedBy = foaf_ "fundedBy" ;;
let geekcode = foaf_ "geekcode" ;;
let gender = foaf_ "gender" ;;
let givenName = foaf_ "givenName" ;;
let givenname = foaf_ "givenname" ;;
let holdsAccount = foaf_ "holdsAccount" ;;
let homepage = foaf_ "homepage" ;;
let icqChatID = foaf_ "icqChatID" ;;
let img = foaf_ "img" ;;
let interest = foaf_ "interest" ;;
let isPrimaryTopicOf = foaf_ "isPrimaryTopicOf" ;;
let jabberID = foaf_ "jabberID" ;;
let knows = foaf_ "knows" ;;
let lastName = foaf_ "lastName" ;;
let logo = foaf_ "logo" ;;
let made = foaf_ "made" ;;
let maker = foaf_ "maker" ;;
let mbox = foaf_ "mbox" ;;
let mbox_sha1sum = foaf_ "mbox_sha1sum" ;;
let member = foaf_ "member" ;;
let membershipClass = foaf_ "membershipClass" ;;
let msnChatID = foaf_ "msnChatID" ;;
let myersBriggs = foaf_ "myersBriggs" ;;
let name = foaf_ "name" ;;
let nick = foaf_ "nick" ;;
let openid = foaf_ "openid" ;;
let page = foaf_ "page" ;;
let pastProject = foaf_ "pastProject" ;;
let phone = foaf_ "phone" ;;
let plan = foaf_ "plan" ;;
let primaryTopic = foaf_ "primaryTopic" ;;
let publications = foaf_ "publications" ;;
let schoolHomepage = foaf_ "schoolHomepage" ;;
let sha1 = foaf_ "sha1" ;;
let skypeID = foaf_ "skypeID" ;;
let status = foaf_ "status" ;;
let surname = foaf_ "surname" ;;
let theme = foaf_ "theme" ;;
let thumbnail = foaf_ "thumbnail" ;;
let tipjar = foaf_ "tipjar" ;;
let title = foaf_ "title" ;;
let topic = foaf_ "topic" ;;
let topic_interest = foaf_ "topic_interest" ;;
let weblog = foaf_ "weblog" ;;
let workInfoHomepage = foaf_ "workInfoHomepage" ;;
let workplaceHomepage = foaf_ "workplaceHomepage" ;;
let yahooChatID = foaf_ "yahooChatID" ;;

module Open = struct
  let foaf_c_Agent = c_Agent
  let foaf_c_Document = c_Document
  let foaf_c_Group = c_Group
  let foaf_c_Image = c_Image
  let foaf_c_LabelProperty = c_LabelProperty
  let foaf_c_OnlineAccount = c_OnlineAccount
  let foaf_c_OnlineChatAccount = c_OnlineChatAccount
  let foaf_c_OnlineEcommerceAccount = c_OnlineEcommerceAccount
  let foaf_c_OnlineGamingAccount = c_OnlineGamingAccount
  let foaf_c_Organization = c_Organization
  let foaf_c_Person = c_Person
  let foaf_c_PersonalProfileDocument = c_PersonalProfileDocument
  let foaf_c_Project = c_Project
  let foaf_account = account
  let foaf_accountName = accountName
  let foaf_accountServiceHomepage = accountServiceHomepage
  let foaf_age = age
  let foaf_aimChatID = aimChatID
  let foaf_based_near = based_near
  let foaf_birthday = birthday
  let foaf_currentProject = currentProject
  let foaf_depiction = depiction
  let foaf_depicts = depicts
  let foaf_dnaChecksum = dnaChecksum
  let foaf_familyName = familyName
  let foaf_family_name = family_name
  let foaf_firstName = firstName
  let foaf_focus = focus
  let foaf_fundedBy = fundedBy
  let foaf_geekcode = geekcode
  let foaf_gender = gender
  let foaf_givenName = givenName
  let foaf_givenname = givenname
  let foaf_holdsAccount = holdsAccount
  let foaf_homepage = homepage
  let foaf_icqChatID = icqChatID
  let foaf_img = img
  let foaf_interest = interest
  let foaf_isPrimaryTopicOf = isPrimaryTopicOf
  let foaf_jabberID = jabberID
  let foaf_knows = knows
  let foaf_lastName = lastName
  let foaf_logo = logo
  let foaf_made = made
  let foaf_maker = maker
  let foaf_mbox = mbox
  let foaf_mbox_sha1sum = mbox_sha1sum
  let foaf_member = member
  let foaf_membershipClass = membershipClass
  let foaf_msnChatID = msnChatID
  let foaf_myersBriggs = myersBriggs
  let foaf_name = name
  let foaf_nick = nick
  let foaf_openid = openid
  let foaf_page = page
  let foaf_pastProject = pastProject
  let foaf_phone = phone
  let foaf_plan = plan
  let foaf_primaryTopic = primaryTopic
  let foaf_publications = publications
  let foaf_schoolHomepage = schoolHomepage
  let foaf_sha1 = sha1
  let foaf_skypeID = skypeID
  let foaf_status = status
  let foaf_surname = surname
  let foaf_theme = theme
  let foaf_thumbnail = thumbnail
  let foaf_tipjar = tipjar
  let foaf_title = title
  let foaf_topic = topic
  let foaf_topic_interest = topic_interest
  let foaf_weblog = weblog
  let foaf_workInfoHomepage = workInfoHomepage
  let foaf_workplaceHomepage = workplaceHomepage
  let foaf_yahooChatID = yahooChatID
end

class from ?sub g =
  let sub = match sub with None -> g.Rdf_graph.name() | Some iri -> iri in
  let sub = Rdf_term.Iri sub in
  object(self)
  method account = Rdf_graph.iri_objects_of g ~sub ~pred: account
  method account_opt = match self#account with [] -> None | x::_ -> Some x
  method accountName = Rdf_graph.literal_objects_of g ~sub ~pred: accountName
  method accountName_opt = match self#accountName with [] -> None | x::_ -> Some x
  method accountServiceHomepage = Rdf_graph.iri_objects_of g ~sub ~pred: accountServiceHomepage
  method accountServiceHomepage_opt = match self#accountServiceHomepage with [] -> None | x::_ -> Some x
  method age = Rdf_graph.literal_objects_of g ~sub ~pred: age
  method age_opt = match self#age with [] -> None | x::_ -> Some x
  method aimChatID = Rdf_graph.literal_objects_of g ~sub ~pred: aimChatID
  method aimChatID_opt = match self#aimChatID with [] -> None | x::_ -> Some x
  method based_near = Rdf_graph.iri_objects_of g ~sub ~pred: based_near
  method based_near_opt = match self#based_near with [] -> None | x::_ -> Some x
  method birthday = Rdf_graph.literal_objects_of g ~sub ~pred: birthday
  method birthday_opt = match self#birthday with [] -> None | x::_ -> Some x
  method currentProject = Rdf_graph.iri_objects_of g ~sub ~pred: currentProject
  method currentProject_opt = match self#currentProject with [] -> None | x::_ -> Some x
  method depiction = Rdf_graph.iri_objects_of g ~sub ~pred: depiction
  method depiction_opt = match self#depiction with [] -> None | x::_ -> Some x
  method depicts = Rdf_graph.iri_objects_of g ~sub ~pred: depicts
  method depicts_opt = match self#depicts with [] -> None | x::_ -> Some x
  method dnaChecksum = Rdf_graph.literal_objects_of g ~sub ~pred: dnaChecksum
  method dnaChecksum_opt = match self#dnaChecksum with [] -> None | x::_ -> Some x
  method familyName = Rdf_graph.literal_objects_of g ~sub ~pred: familyName
  method familyName_opt = match self#familyName with [] -> None | x::_ -> Some x
  method family_name = Rdf_graph.literal_objects_of g ~sub ~pred: family_name
  method family_name_opt = match self#family_name with [] -> None | x::_ -> Some x
  method firstName = Rdf_graph.literal_objects_of g ~sub ~pred: firstName
  method firstName_opt = match self#firstName with [] -> None | x::_ -> Some x
  method focus = Rdf_graph.iri_objects_of g ~sub ~pred: focus
  method focus_opt = match self#focus with [] -> None | x::_ -> Some x
  method fundedBy = Rdf_graph.iri_objects_of g ~sub ~pred: fundedBy
  method fundedBy_opt = match self#fundedBy with [] -> None | x::_ -> Some x
  method geekcode = Rdf_graph.literal_objects_of g ~sub ~pred: geekcode
  method geekcode_opt = match self#geekcode with [] -> None | x::_ -> Some x
  method gender = Rdf_graph.literal_objects_of g ~sub ~pred: gender
  method gender_opt = match self#gender with [] -> None | x::_ -> Some x
  method givenName = Rdf_graph.iri_objects_of g ~sub ~pred: givenName
  method givenName_opt = match self#givenName with [] -> None | x::_ -> Some x
  method givenname = Rdf_graph.iri_objects_of g ~sub ~pred: givenname
  method givenname_opt = match self#givenname with [] -> None | x::_ -> Some x
  method holdsAccount = Rdf_graph.iri_objects_of g ~sub ~pred: holdsAccount
  method holdsAccount_opt = match self#holdsAccount with [] -> None | x::_ -> Some x
  method homepage = Rdf_graph.iri_objects_of g ~sub ~pred: homepage
  method homepage_opt = match self#homepage with [] -> None | x::_ -> Some x
  method icqChatID = Rdf_graph.literal_objects_of g ~sub ~pred: icqChatID
  method icqChatID_opt = match self#icqChatID with [] -> None | x::_ -> Some x
  method img = Rdf_graph.iri_objects_of g ~sub ~pred: img
  method img_opt = match self#img with [] -> None | x::_ -> Some x
  method interest = Rdf_graph.iri_objects_of g ~sub ~pred: interest
  method interest_opt = match self#interest with [] -> None | x::_ -> Some x
  method isPrimaryTopicOf = Rdf_graph.iri_objects_of g ~sub ~pred: isPrimaryTopicOf
  method isPrimaryTopicOf_opt = match self#isPrimaryTopicOf with [] -> None | x::_ -> Some x
  method jabberID = Rdf_graph.literal_objects_of g ~sub ~pred: jabberID
  method jabberID_opt = match self#jabberID with [] -> None | x::_ -> Some x
  method knows = Rdf_graph.iri_objects_of g ~sub ~pred: knows
  method knows_opt = match self#knows with [] -> None | x::_ -> Some x
  method lastName = Rdf_graph.literal_objects_of g ~sub ~pred: lastName
  method lastName_opt = match self#lastName with [] -> None | x::_ -> Some x
  method logo = Rdf_graph.iri_objects_of g ~sub ~pred: logo
  method logo_opt = match self#logo with [] -> None | x::_ -> Some x
  method made = Rdf_graph.iri_objects_of g ~sub ~pred: made
  method made_opt = match self#made with [] -> None | x::_ -> Some x
  method maker = Rdf_graph.iri_objects_of g ~sub ~pred: maker
  method maker_opt = match self#maker with [] -> None | x::_ -> Some x
  method mbox = Rdf_graph.iri_objects_of g ~sub ~pred: mbox
  method mbox_opt = match self#mbox with [] -> None | x::_ -> Some x
  method mbox_sha1sum = Rdf_graph.literal_objects_of g ~sub ~pred: mbox_sha1sum
  method mbox_sha1sum_opt = match self#mbox_sha1sum with [] -> None | x::_ -> Some x
  method member = Rdf_graph.iri_objects_of g ~sub ~pred: member
  method member_opt = match self#member with [] -> None | x::_ -> Some x
  method membershipClass = Rdf_graph.iri_objects_of g ~sub ~pred: membershipClass
  method membershipClass_opt = match self#membershipClass with [] -> None | x::_ -> Some x
  method msnChatID = Rdf_graph.literal_objects_of g ~sub ~pred: msnChatID
  method msnChatID_opt = match self#msnChatID with [] -> None | x::_ -> Some x
  method myersBriggs = Rdf_graph.literal_objects_of g ~sub ~pred: myersBriggs
  method myersBriggs_opt = match self#myersBriggs with [] -> None | x::_ -> Some x
  method name = Rdf_graph.literal_objects_of g ~sub ~pred: name
  method name_opt = match self#name with [] -> None | x::_ -> Some x
  method nick = Rdf_graph.iri_objects_of g ~sub ~pred: nick
  method nick_opt = match self#nick with [] -> None | x::_ -> Some x
  method openid = Rdf_graph.iri_objects_of g ~sub ~pred: openid
  method openid_opt = match self#openid with [] -> None | x::_ -> Some x
  method page = Rdf_graph.iri_objects_of g ~sub ~pred: page
  method page_opt = match self#page with [] -> None | x::_ -> Some x
  method pastProject = Rdf_graph.iri_objects_of g ~sub ~pred: pastProject
  method pastProject_opt = match self#pastProject with [] -> None | x::_ -> Some x
  method phone = Rdf_graph.iri_objects_of g ~sub ~pred: phone
  method phone_opt = match self#phone with [] -> None | x::_ -> Some x
  method plan = Rdf_graph.literal_objects_of g ~sub ~pred: plan
  method plan_opt = match self#plan with [] -> None | x::_ -> Some x
  method primaryTopic = Rdf_graph.iri_objects_of g ~sub ~pred: primaryTopic
  method primaryTopic_opt = match self#primaryTopic with [] -> None | x::_ -> Some x
  method publications = Rdf_graph.iri_objects_of g ~sub ~pred: publications
  method publications_opt = match self#publications with [] -> None | x::_ -> Some x
  method schoolHomepage = Rdf_graph.iri_objects_of g ~sub ~pred: schoolHomepage
  method schoolHomepage_opt = match self#schoolHomepage with [] -> None | x::_ -> Some x
  method sha1 = Rdf_graph.iri_objects_of g ~sub ~pred: sha1
  method sha1_opt = match self#sha1 with [] -> None | x::_ -> Some x
  method skypeID = Rdf_graph.literal_objects_of g ~sub ~pred: skypeID
  method skypeID_opt = match self#skypeID with [] -> None | x::_ -> Some x
  method status = Rdf_graph.literal_objects_of g ~sub ~pred: status
  method status_opt = match self#status with [] -> None | x::_ -> Some x
  method surname = Rdf_graph.literal_objects_of g ~sub ~pred: surname
  method surname_opt = match self#surname with [] -> None | x::_ -> Some x
  method theme = Rdf_graph.iri_objects_of g ~sub ~pred: theme
  method theme_opt = match self#theme with [] -> None | x::_ -> Some x
  method thumbnail = Rdf_graph.iri_objects_of g ~sub ~pred: thumbnail
  method thumbnail_opt = match self#thumbnail with [] -> None | x::_ -> Some x
  method tipjar = Rdf_graph.iri_objects_of g ~sub ~pred: tipjar
  method tipjar_opt = match self#tipjar with [] -> None | x::_ -> Some x
  method title = Rdf_graph.iri_objects_of g ~sub ~pred: title
  method title_opt = match self#title with [] -> None | x::_ -> Some x
  method topic = Rdf_graph.iri_objects_of g ~sub ~pred: topic
  method topic_opt = match self#topic with [] -> None | x::_ -> Some x
  method topic_interest = Rdf_graph.iri_objects_of g ~sub ~pred: topic_interest
  method topic_interest_opt = match self#topic_interest with [] -> None | x::_ -> Some x
  method weblog = Rdf_graph.iri_objects_of g ~sub ~pred: weblog
  method weblog_opt = match self#weblog with [] -> None | x::_ -> Some x
  method workInfoHomepage = Rdf_graph.iri_objects_of g ~sub ~pred: workInfoHomepage
  method workInfoHomepage_opt = match self#workInfoHomepage with [] -> None | x::_ -> Some x
  method workplaceHomepage = Rdf_graph.iri_objects_of g ~sub ~pred: workplaceHomepage
  method workplaceHomepage_opt = match self#workplaceHomepage with [] -> None | x::_ -> Some x
  method yahooChatID = Rdf_graph.literal_objects_of g ~sub ~pred: yahooChatID
  method yahooChatID_opt = match self#yahooChatID with [] -> None | x::_ -> Some x
  end
