version = "@VERSION@"
description = "RDF and Sparql with OCaml"
requires = "ptime,uri,iri,uuidm,xmlm,sedlex,cryptokit,pcre,menhirLib,yojson,jsonm"
archive(byte) = "rdf.cma"
archive(native) = "rdf.cmxa"
archive(native,plugin) = "rdf.cmxs"

package "js" (
  description = "RDF and Sparql with OCaml - Library to compile to Javascript"
  requires = "ptime,uri,iri,uuidm,xmlm,sedlex,menhirLib,yojson,jsonm"
  archive(byte) = "rdf_js.cma"
)
package "mysql" (
  exists_if = "rdf_mysql.cma"
  version = "@VERSION@"
  description = "MySQL interface"
  requires = "mysql,rdf"
  archive(byte) = "rdf_mysql.cma"
  archive(native) = "rdf_mysql.cmxa"
  archive(native,plugin) = "rdf_mysql.cmxs"

)
package "postgresql" (
  exists_if = "rdf_postgresql.cma"
  version = "@VERSION@"
  description = "Postgresql interface"
  requires = "postgresql,rdf"
  archive(byte) = "rdf_postgresql.cma"
  archive(native) = "rdf_postgresql.cmxa"
  archive(native,plugin) = "rdf_postgresql.cmxs"
)

package "lwt" (
  exists_if = "rdf_lwt.cma"
  version = "@VERSION@"
  description = "Sparql HTTP with Lwt"
  requires = "lwt,cohttp.lwt,rdf"
  archive(byte) = "rdf_lwt.cma"
  archive(native) = "rdf_lwt.cmxa"
  archive(native,plugin) = "rdf_lwt.cmxs"
)

package "ppx" (
  version = "@VERSION@"
  description = "Syntax extension for OCaml-RDF"
  ppx(byte) = "./ppx_rdf.byte"
  ppx(native) = "./ppx_rdf"
)